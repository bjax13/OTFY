{"version":3,"sources":["app.js","controllers/addressInputCtrl.js","controllers/ecpInputCtrl.js","controllers/loginCtrl.js","controllers/mainCtrl.js","controllers/navBarCtrl.js","controllers/rxInputCtrl.js","directives/navDirective.js","services/addressAutoFillSrvc.js","services/ecpSaveSrvc.js","services/rxSrvc.js","services/saveAddressSrvc.js","services/userSrvc.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","$scope","addressAutoFillSrvc","saveAddressSrvc","test","logAddress","initialize","geolocate","ecpSaveSrvc","userSrvc","$state","localSignup","togglelogin","console","log","createUserLocal","user","createUser","then","response","data","login","r","go","loggedIn","changeLoggin","rxSrvc","detailsToggle","getProducts","populateProductList","products","directive","restrict","scope","service","placeSearch","autocomplete","componentForm","street_number","route","locality","administrative_area_level_1","country","postal_code","google","maps","places","Autocomplete","document","getElementById","types","event","addListener","fillInAddress","place","getPlace","component","value","disabled","i","address_components","length","addressType","val","navigator","geolocation","getCurrentPosition","position","LatLng","coords","latitude","longitude","circle","Circle","center","radius","accuracy","setBounds","getBounds","addresses","addressObj","ECPSearch","streetNumber","streetName","city","postalCode","push","alert","$http","method","addressSearch"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app',['ui.router', 'ngCart'])\n .config(function ($stateProvider, $urlRouterProvider) {\n\n   $urlRouterProvider.otherwise('/');\n\n\n   $stateProvider\n      .state('landingPage', {\n        url: '/',\n        templateUrl: './views/landingPage.html'\n      })\n      .state('main', {\n        url: '/main',\n        templateUrl: './views/main.html'\n      })\n      .state('login', {\n        url: '/login',\n        templateUrl: './views/login.html',\n        controller: 'loginCtrl'\n      })\n      .state('orderCL', {\n        url: '/orderCL',\n        templateUrl: './views/orderCL.html'\n      })\n      .state('orderCL.address', {\n        url: '/address',\n        templateUrl: './views/orderClSub/address.html',\n        controller: 'addressInputCtrl'\n      })\n      .state('orderCL.selectBrand', {\n        url: '/selectBrand',\n        templateUrl: './views/orderClSub/selectBrand.html',\n        controller: 'rxInputCtrl'\n      })\n      .state('orderCL.selectECP', {\n        url: '/selectECP',\n        templateUrl: './views/orderClSub/selectECP.html',\n        controller: 'ecpInputCtrl'\n      })\n      .state('orderCL.checkout', {\n        url: '/checkout',\n        templateUrl: './views/orderClSub/checkout.html'\n      })\n      .state('scheduleEyeExamComingSoon', {\n        url: '/scheduleEyeExamComingSoon',\n        templateUrl: './views/scheduleEyeExamComingSoon.html'\n      })\n      .state('orderEWComingSoon', {\n        url: '/orderEWComingSoon',\n        templateUrl: './views/orderEWComingSoon.html'\n      })\n      .state('userInfo', {\n        url: '/userInfo',\n        templateUrl: './views/userInfo.html'\n      });\n\n });\n","angular.module('app')\n  .controller('addressInputCtrl', function ($scope,addressAutoFillSrvc, saveAddressSrvc) {\n    $scope.test = addressAutoFillSrvc.test;\n\n\n    $scope.logAddress = saveAddressSrvc.logAddress;\n\n\n    $scope.initialize = addressAutoFillSrvc.initialize;\n\n    $scope.geolocate = addressAutoFillSrvc.geolocate;\n\n  });\n","angular.module('app')\n  .controller('ecpInputCtrl', function ($scope,addressAutoFillSrvc, ecpSaveSrvc) {\n    $scope.test = addressAutoFillSrvc.test;\n\n\n    $scope.logAddress = ecpSaveSrvc.logAddress;\n\n\n    $scope.initialize = addressAutoFillSrvc.initialize;\n\n    $scope.geolocate = addressAutoFillSrvc.geolocate;\n\n  });\n","angular.module('app')\n\t.controller('loginCtrl', function($scope, userSrvc, $state) {\n\n\t\t$scope.test = 'again';\n\t\t$scope.localSignup = true;\n\n\t\t$scope.togglelogin = function() {\n\n\t\t\t$scope.localSignup = !$scope.localSignup;\n\t\t\tconsole.log($scope.localSignup);\n\t\t};\n\t\t$scope.createUserLocal = function(user) {\n\t\t\tuserSrvc.createUser(user).then(function(response) {\n\t\t\t\tconsole.log(response.data);\n\t\t\t});\n\t\t};\n\n\t\t$scope.login = function(user) {\n\t\t\tuserSrvc.login(user).then(function(r) {\n\t\t\t\tif (!r.data) {\n\t\t\t\t\t$state.go('userInfo');\n\t\t\t\t} else {\n\t\t\t\t\t$state.go('main');\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t});\n","angular.module('app')\n  .controller('mainCtrl', function ($scope) {\n\n$scope.test = 'again';\n  });\n","angular.module('app')\n  .controller('navBarCtrl', function ($scope) {\n    $scope.loggedIn = true;\n\n    $scope.changeLoggin = function () {\n\n      $scope.loggedIn = !$scope.loggedIn;\n      console.log($scope.loggedIn);\n    };\n\n  });\n","angular.module('app')\n  .controller('rxInputCtrl', function ($scope, rxSrvc ) {\n    $scope.test = rxSrvc.test;\n\n    $scope.detailsToggle = true;\n\n    // $scope.toggleDetails = () =>{\n    //    $scope.detailsToggle = !$scope.detailsToggle;\n    //    console.log($scope.detailsToggle);\n    //\n    // };\n\n    $scope.getProducts = function () {\n\n      rxSrvc.populateProductList().then(function (response) {\n        $scope.products = response.data;\n        console.log(response.data);\n      });\n    };\n\n    $scope.getProducts();\n\n\n\n  });\n","angular.module('app')\n  .directive('navBar', function () {\n    return {\n      restrict: 'E',\n      templateUrl: \"./views/directives/templates/navTpl.html\",\n      scope: {\n      },\n      controller: 'navBarCtrl'\n    };\n  });\n","angular.module('app')\n  .service('addressAutoFillSrvc', function () {\n\n    this.test = '**Test Data**';\n\n    let placeSearch, autocomplete;\n    let componentForm = {\n      street_number: 'short_name',\n      route: 'long_name',\n      locality: 'long_name',\n      administrative_area_level_1: 'short_name',\n      country: 'long_name',\n      postal_code: 'short_name'\n    };\n\n    this.initialize = function() {\n      // Create the autocomplete object, restricting the search\n      // to geographical location types.\n      autocomplete = new google.maps.places.Autocomplete(\n          /** @type {HTMLInputElement} */(document.getElementById('autocomplete')),\n          { types: ['geocode'] });\n      // When the user selects an address from the dropdown,\n      // populate the address fields in the form.\n      google.maps.event.addListener(autocomplete, 'place_changed', function() {\n        fillInAddress();\n      });\n    };\n\n    function fillInAddress() {\n      // Get the place details from the autocomplete object.\n      var place = autocomplete.getPlace();\n\n      for (var component in componentForm) {\n        document.getElementById(component).value = '';\n        document.getElementById(component).disabled = false;\n      }\n\n      // Get each component of the address from the place details\n      // and fill the corresponding field on the form.\n      for (var i = 0; i < place.address_components.length; i++) {\n        var addressType = place.address_components[i].types[0];\n        if (componentForm[addressType]) {\n          var val = place.address_components[i][componentForm[addressType]];\n          document.getElementById(addressType).value = val;\n        }\n      }\n    }\n    // [END region_fillform]\n\n    // [START region_geolocation]\n    // Bias the autocomplete object to the user's geographical location,\n    // as supplied by the browser's 'navigator.geolocation' object.\n    this.geolocate = function() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function(position) {\n          var geolocation = new google.maps.LatLng(\n              position.coords.latitude, position.coords.longitude);\n          var circle = new google.maps.Circle({\n            center: geolocation,\n            radius: position.coords.accuracy\n          });\n          autocomplete.setBounds(circle.getBounds());\n        });\n      }\n    };\n    // [END region_geolocation]\n\n\n\n\n  });\n","angular.module('app')\n  .service('ecpSaveSrvc', function () {\n\n    this.test = 'test success';\n\n    let addresses = [];\n\n    this.logAddress = function () {\n      let addressObj = {\n        ECPSearch: document.getElementById('autocomplete').value,\n        streetNumber: document.getElementById('street_number').value,\n        streetName: document.getElementById('route').value,\n        city: document.getElementById('locality').value,\n        country: document.getElementById('country').value,\n        postalCode: document.getElementById('postal_code').value,\n        state: document.getElementById('administrative_area_level_1').value,\n      };\n\n\n\n      if (addressObj.state && addressObj.streetNumber&& addressObj.streetName&& addressObj.city&& addressObj.country&& addressObj.postalCode) {\n        addresses.push(addressObj);\n        console.log(addresses);\n      }else {\n        alert('missing address field');\n      }\n    };\n\n\n\n});\n","angular.module('app')\n  .service('rxSrvc', function ($http) {\n\n    this.test = 'k';\n\n\n\n    this.populateProductList = function () {\n      return $http({\n\t\t\t\tmethod: 'GET',\n\t\t\t\turl: '/api/products'\n\t\t\t});\n    };\n  \n\n\n\n\n\n\n\n});\n","angular.module('app')\n  .service('saveAddressSrvc', function () {\n\n    let addresses = [];\n\n    this.logAddress = function () {\n      let addressObj = {\n        addressSearch: document.getElementById('autocomplete').value,\n        streetNumber: document.getElementById('street_number').value,\n        streetName: document.getElementById('route').value,\n        city: document.getElementById('locality').value,\n        country: document.getElementById('country').value,\n        postalCode: document.getElementById('postal_code').value,\n        state: document.getElementById('administrative_area_level_1').value,\n      };\n\n\n\n      if (addressObj.state && addressObj.streetNumber&& addressObj.streetName&& addressObj.city&& addressObj.country&& addressObj.postalCode) {\n        addresses.push(addressObj);\n        console.log(addresses);\n      }else {\n        alert('missing address field');\n      }\n    };\n\n\n\n});\n","angular.module('app')\n\t.service('userSrvc', function($http) {\n\n\t\tthis.createUser = function(user) {\n\t\t\treturn $http({\n\t\t\t\tmethod: 'POST',\n\t\t\t\turl: '/api/user',\n\t\t\t\tdata: user\n\t\t\t});\n\t\t};\n\t\tthis.login = function(user) {\n\t\t\treturn $http({\n\t\t\t\tmethod: 'POST',\n\t\t\t\turl: '/login',\n\t\t\t\tdata: user\n\t\t\t});\n\t\t};\n\n\n\t});\n"]}